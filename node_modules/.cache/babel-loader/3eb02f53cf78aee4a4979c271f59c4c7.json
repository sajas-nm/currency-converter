{"ast":null,"code":"var _jsxFileName = \"/media/sjs/Office/currency converter/currency-converter/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertCurrency = () => {\n      if (this.state.country === '') {\n        alert(\"pls select a county\");\n      } // validation for amount\n\n\n      let convertedValue = 0;\n\n      switch (this.state.country) {\n        case 'USD':\n          convertedValue = this.stateamount;\n          break;\n\n        case 'INR':\n          alert(\"INR\");\n          break;\n\n        case 'EUR':\n          alert(\"EUR\");\n          break;\n      }\n    };\n\n    this.state = {\n      amount: 0,\n      country: '',\n      convertedValue: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.amount,\n      onChange: e => {\n        this.setState({\n          amount: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => {\n        this.setState({\n          country: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"--- select ---\"), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"EUR\"), React.createElement(\"option\", {\n      value: \"INR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"INR\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.convertCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Convert\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.convertedValue));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/sjs/Office/currency converter/currency-converter/src/App.js"],"names":["React","Component","App","constructor","props","convertCurrency","state","country","alert","convertedValue","stateamount","amount","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,eAVmB,GAUD,MAAM;AACtB,UAAG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,EAA1B,EAA8B;AAC5BC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,OAHqB,CAItB;;;AAGA,UAAIC,cAAc,GAAG,CAArB;;AAEA,cAAO,KAAKH,KAAL,CAAWC,OAAlB;AACE,aAAK,KAAL;AAAYE,UAAAA,cAAc,GAAC,KAAKC,WAApB;AACZ;;AACA,aAAK,KAAL;AAAYF,UAAAA,KAAK,CAAC,KAAD,CAAL;AACZ;;AACA,aAAK,KAAL;AAAWA,UAAAA,KAAK,CAAC,KAAD,CAAL;AACX;AANF;AAQD,KA3BkB;;AAGjB,SAAKF,KAAL,GAAa;AACXK,MAAAA,MAAM,EAAE,CADG;AAEXJ,MAAAA,OAAO,EAAE,EAFE;AAGXE,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAqBDG,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWK,MAAvC;AAA+C,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAC9D,aAAKC,QAAL,CAAc;AACZH,UAAAA,MAAM,EAAEE,CAAC,CAACE,MAAF,CAASC;AADL,SAAd;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAQ,MAAA,QAAQ,EAAGH,CAAD,IAAO;AACvB,aAAKC,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAEM,CAAC,CAACE,MAAF,CAASC;AADN,SAAd;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAME;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EAQE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CARF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAqBE;AAAQ,MAAA,OAAO,EAAE,KAAKX,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWG,cAAjB,CAvBF,CADF;AA4BD;;AA5DyB;;AA+D5B,eAAeP,GAAf","sourcesContent":["import React ,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount: 0,\n      country: '',\n      convertedValue: 0\n    }\n  }\n  \n  convertCurrency = () => {\n    if(this.state.country === '') {\n      alert(\"pls select a county\")\n    }\n    // validation for amount\n\n\n    let convertedValue = 0;\n\n    switch(this.state.country){\n      case 'USD': convertedValue=this.stateamount\n      break;\n      case 'INR' :alert(\"INR\");\n      break;\n      case 'EUR':alert(\"EUR\");\n      break;\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n\n        <input type=\"number\" value={this.state.amount} onChange={(e) => {\n          this.setState({\n            amount: e.target.value\n          })\n        }} ></input>\n\n        <select onChange={(e) => {\n          this.setState({\n            country: e.target.value\n          })\n        }}>\n          <option value=\"\">--- select ---</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n          <option value=\"INR\">INR</option>\n        </select>\n\n        <br />\n\n        <button onClick={this.convertCurrency}>Convert</button>\n\n        <div>{this.state.convertedValue}</div>\n        \n      </div>\n    );    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}