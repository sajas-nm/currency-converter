{"ast":null,"code":"var _jsxFileName = \"/media/sjs/Office/currency converter/currency-converter/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      console.log(\"will mount\");\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"did mount\");\n      axios({\n        method: \"GET\",\n        url: \"https://free.currconv.com/api/v7/currencies?apiKey=b2926387e0a03a02fa74\"\n      }).then(res => {\n        let countryCodes = []; // console.log(res.data.results);\n\n        let currencyCodes = Object.keys(res.data.results); // console.log(currencyCodes);\n\n        currencyCodes.forEach(cc => {\n          // console.log(res.data.results[cc].currencyName);\n          countryCodes.push({\n            currencyName: res.data.results[cc].currencyName,\n            currencyCode: cc\n          });\n        });\n        this.setState({\n          currencyCodes: countryCodes\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.convertCurrency = () => {\n      if (this.state.country === '') {\n        alert(\"pls select a county\");\n      } // validation for amount\n\n\n      axios({\n        method: 'GET',\n        url: 'https://free.currconv.com/api/v7/convert?q=++&apiKey=b2926387e0a03a02fa74&compact=ultra'\n      }).then(res => {\n        console.log(res.data.results);\n      }).catch(err => {\n        console.log(err);\n      });\n      let convertedValue = 0;\n      this.setState({\n        convertedValue: convertedValue,\n        amount: \"\"\n      });\n    };\n\n    this.state = {\n      amount: 0,\n      country: '',\n      convertedValue: 0,\n      currencyCodes: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.amount,\n      onChange: e => {\n        this.setState({\n          amount: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => {\n        this.setState({\n          country: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"--- select ---\"), this.state.currencyCodes.map((cc, i) => {\n      return React.createElement(\"option\", {\n        value: cc.currencyCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, cc.currencyCode, \" - \", cc.currencyName);\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.convertCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Convert\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.convertedValue));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/sjs/Office/currency converter/currency-converter/src/App.js"],"names":["React","Component","axios","App","constructor","props","componentWillMount","console","log","componentDidMount","method","url","then","res","countryCodes","currencyCodes","Object","keys","data","results","forEach","cc","push","currencyName","currencyCode","setState","catch","err","convertCurrency","state","country","alert","convertedValue","amount","render","e","target","value","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,kBAXmB,GAWE,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAbkB;;AAAA,SAenBC,iBAfmB,GAeC,MAAM;AACxBF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAN,MAAAA,KAAK,CAAC;AACJQ,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE;AAFD,OAAD,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAAS;AACf,YAAIC,YAAY,GAAG,EAAnB,CADe,CAEf;;AACA,YAAIC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACK,IAAJ,CAASC,OAArB,CAApB,CAHe,CAIf;;AAEAJ,QAAAA,aAAa,CAACK,OAAd,CAAuBC,EAAD,IAAQ;AAC5B;AACAP,UAAAA,YAAY,CAACQ,IAAb,CAAkB;AAChBC,YAAAA,YAAY,EAAEV,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAiBE,EAAjB,EAAqBE,YADnB;AAEhBC,YAAAA,YAAY,EAAEH;AAFE,WAAlB;AAID,SAND;AAQA,aAAKI,QAAL,CAAc;AACZV,UAAAA,aAAa,EAAED;AADH,SAAd;AAKD,OAtBD,EAsBGY,KAtBH,CAsBUC,GAAD,IAAS;AAChBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACD,OAxBD;AAyBD,KA1CkB;;AAAA,SA4CnBC,eA5CmB,GA4CD,MAAM;AACtB,UAAG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,EAA1B,EAA8B;AAC5BC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,OAHqB,CAItB;;;AAEA7B,MAAAA,KAAK,CAAC;AACJQ,QAAAA,MAAM,EAAC,KADH;AAEJC,QAAAA,GAAG,EAAC;AAFA,OAAD,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAAO;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACK,IAAJ,CAASC,OAArB;AACJ,OALD,EAKGO,KALH,CAKUC,GAAD,IAAO;AACdpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACD,OAPD;AASA,UAAIK,cAAc,GAAG,CAArB;AAIA,WAAKP,QAAL,CAAc;AACZO,QAAAA,cAAc,EAACA,cADH;AAEZC,QAAAA,MAAM,EAAC;AAFK,OAAd;AAKD,KApEkB;;AAGjB,SAAKJ,KAAL,GAAa;AACXI,MAAAA,MAAM,EAAE,CADG;AAEXH,MAAAA,OAAO,EAAE,EAFE;AAGXE,MAAAA,cAAc,EAAE,CAHL;AAIXjB,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AA6DDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,MAAvC;AAA+C,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAC9D,aAAKV,QAAL,CAAc;AACZQ,UAAAA,MAAM,EAAEE,CAAC,CAACC,MAAF,CAASC;AADL,SAAd;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAQ,MAAA,QAAQ,EAAGF,CAAD,IAAO;AACvB,aAAKV,QAAL,CAAc;AACZK,UAAAA,OAAO,EAAEK,CAAC,CAACC,MAAF,CAASC;AADN,SAAd;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAMG,KAAKR,KAAL,CAAWd,aAAX,CAAyBuB,GAAzB,CAA6B,CAACjB,EAAD,EAAKkB,CAAL,KAAW;AACvC,aACE;AAAQ,QAAA,KAAK,EAAElB,EAAE,CAACG,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCH,EAAE,CAACG,YAArC,SAAsDH,EAAE,CAACE,YAAzD,CADF;AAGD,KAJA,CANH,CARF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAuBE;AAAQ,MAAA,OAAO,EAAE,KAAKK,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAvBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWG,cAAjB,CAzBF,CADF;AA8BD;;AAvGyB;;AA0G5B,eAAe7B,GAAf","sourcesContent":["import React ,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount: 0,\n      country: '',\n      convertedValue: 0,\n      currencyCodes: []\n    }\n  }\n\n  componentWillMount = () => {\n    console.log(\"will mount\")\n  }\n\n  componentDidMount = () => {\n    console.log(\"did mount\");\n    axios({\n      method: \"GET\",\n      url: \"https://free.currconv.com/api/v7/currencies?apiKey=b2926387e0a03a02fa74\"\n    }).then((res) => {\n      let countryCodes = [];\n      // console.log(res.data.results);\n      let currencyCodes = Object.keys(res.data.results);\n      // console.log(currencyCodes);\n\n      currencyCodes.forEach((cc) => {\n        // console.log(res.data.results[cc].currencyName);\n        countryCodes.push({\n          currencyName: res.data.results[cc].currencyName,\n          currencyCode: cc\n        })\n      })\n\n      this.setState({\n        currencyCodes: countryCodes\n      })\n\n\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n  \n  convertCurrency = () => {\n    if(this.state.country === '') {\n      alert(\"pls select a county\")\n    }\n    // validation for amount\n\n    axios({\n      method:'GET',\n      url:'https://free.currconv.com/api/v7/convert?q=++&apiKey=b2926387e0a03a02fa74&compact=ultra'\n    }).then((res)=>{\n         console.log(res.data.results)\n    }).catch((err)=>{\n      console.log(err)\n    })\n\n    let convertedValue = 0;\n\n\n    \n    this.setState({\n      convertedValue:convertedValue,\n      amount:\"\"\n    })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <input type=\"number\" value={this.state.amount} onChange={(e) => {\n          this.setState({\n            amount: e.target.value\n          })\n        }} ></input>\n\n        <select onChange={(e) => {\n          this.setState({\n            country: e.target.value\n          })\n        }}>\n          <option value=\"\">--- select ---</option>\n          {this.state.currencyCodes.map((cc, i) => {\n            return(\n              <option value={cc.currencyCode} >{cc.currencyCode} - {cc.currencyName}</option>\n            )\n          })}\n        </select>\n\n        <br />\n\n        <button onClick={this.convertCurrency}>Convert</button>\n\n        <div>{this.state.convertedValue}</div>\n        \n      </div>\n    );    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}